apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: naglfar-sysbench-benching-
spec:
  entrypoint: starter
  onExit: delete-ns
  arguments:
    parameters:
      - name: oltp_method
        value: oltp_read_write                # oltp_point_select, oltp_insert, oltp_update_index, oltp_update_non_index, oltp_read_only, oltp_read_write, oltp_write_only
      ######################################### current part
      - name: release                           # release version: nightly, v3.0.x, v4.0.x
        value: v5.0.1-pre
      - name: tidb-url
        value: ""
      - name: tikv-url
        value: ""
      - name: pd-url
        value: ""
      - name: toolset-tag                       # we use br to restore data, so you need fill in the toolset version
        value: nightly              # option: nightly | v5.0-rc-nightly | release-4.0-nightly
      ######################################### baseline part
      - name: baseline-release
        value: v5.0.0
      - name: baseline-tidb-url                 # if need to patch baseline tidb binary version
        value: ""
      - name: baseline-tikv-url
        value: ""
      - name: baseline-pd-url
        value: ""
      - name: baseline-toolset-tag             # we use br to restore data, so you need fill in the toolset version
        value: nightly                         # option: nightly | v5.0-rc-nightly | release-4.0-nightly
  templates:
    - name: starter
      steps:
        - - name: create-ns
            template: create-ns
        - - name: request-cluster
            template: request-cluster
        - - name: create-cluster
            template: create-cluster
            arguments:
              parameters: [ { name: release-branch, value: "{{workflow.parameters.release}}" },
                            { name: tidb-url, value: "{{workflow.parameters.tidb-url}}" },
                            { name: tikv-url, value: "{{workflow.parameters.tikv-url}}" },
                            { name: pd-url, value: "{{workflow.parameters.pd-url}}" } ]
        - - name: importer-logs-1
            template: importer-logs
            arguments:
              parameters: [ { name: toolset-tag,   value: "{{workflow.parameters.toolset-tag}}" },
                            { name: release-branch, value: "{{workflow.parameters.release}}" } ]
        - - name: benching-logs-1
            template: benching-logs
        
    - name: importer-logs
      inputs:
        parameters:
          - name: toolset-tag
          - name: release-branch
      steps:
        - - name: importing
            template: importing
            arguments:
              parameters: [ { name: toolset-tag,    value: "{{inputs.parameters.toolset-tag}}" },
                            { name: release-branch, value: "{{inputs.parameters.release-branch}}" }]
          - name: importing-logs
            template: logs
            arguments:
              parameters: [ { name: workload_name, value: "sysbench-importing" } ]
        - - name: importing-deletion
            template: workload-deletion
            arguments:
              parameters: [ { name: workload_name, value: "sysbench-importing" } ]
    - name: benching-logs
      steps:
        - - name: benching
            template: benching
          - name: benching-logs
            template: logs
            arguments:
              parameters: [ { name: workload_name, value: "sysbench-benching" } ]
        - - name: importing-deletion
            template: workload-deletion
            arguments:
              parameters: [ { name: workload_name, value: "sysbench-benching" } ]
    - name: logs
      inputs:
        parameters:
          - name: workload_name
      container:
        name: logs
        image: 'argoproj/argoexec:latest'
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - '-c'
          - |
            while true
            do
                state=`kubectl get tw {{inputs.parameters.workload_name}} -n {{workflow.name}} -ojsonpath='{.status.state}' || echo pending`
                if [ "running" = "$state" ]; then
                    break
                fi
                if [ "succeeded" = "$state" ]; then
                    break
                fi
                if [ "failed" = "$state" ]; then
                    break
                fi
                echo "workload isn't already now. Wait 10s..."
                sleep 10
                i=$((i+1))
                if [ $i -eq 60 ]; then
                  exit 1
                fi
            done
            curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/PingCAP-QE/Naglfar/master/scripts/kubectl-naglfar-installer.sh | sh
            export PATH=$PATH:/root/.Naglfar/bin
            naglfar logs {{inputs.parameters.workload_name}} -n {{workflow.name}} --follow
    - name: request-cluster
      resource:
        action: create
        successCondition: status.state = ready
        manifest: |
          apiVersion: naglfar.pingcap.com/v1
          kind: TestResourceRequest
          metadata:
            name: tidb-cluster
            namespace: {{workflow.name}}
          spec:
            machines:
              - name: m1
                exclusive: true
              - name: m2
                exclusive: true
              - name: m3
                exclusive: true
              - name: m4
                exclusive: true
              - name: m5
                exclusive: true  
              - name: m6
                exclusive: true 
              - name: m7
                exclusive: true 
              - name: m8
                exclusive: true             
            items:
              - name: tidb-1
                spec:
                  memory: 24GB
                  cores: 8
                  machine: m1
              - name: tidb-2
                spec:
                  memory: 24GB
                  cores: 8
                  machine: m2    
              - name: pd
                spec:
                  memory: 10GB
                  cores: 8
                  machine: m3
              - name: tikv-1
                spec:
                  memory: 20GB
                  cores: 8
                  disks:
                    disk1:
                      kind: nvme
                      mountPath: /disk1
                  machine: m4
              - name: tikv-2
                spec:
                  memory: 20GB
                  cores: 8
                  disks:
                    disk1:
                      kind: nvme
                      mountPath: /disk1
                  machine: m5  
              - name: tikv-3
                spec:
                  memory: 20GB
                  cores: 8
                  disks:
                    disk1:
                      kind: nvme
                      mountPath: /disk1
                  machine: m6    
              - name: tikv-4
                spec:
                  memory: 20GB
                  cores: 8
                  disks:
                    disk1:
                      kind: nvme
                      mountPath: /disk1
                  machine: m6        
              - name: tikv-5
                spec:
                  memory: 20GB
                  cores: 8
                  disks:
                    disk1:
                      kind: nvme
                      mountPath: /disk1                
                  machine: m7    
              - name: workload
                spec:
                  memory: 8GB
                  cores: 4
                  machine: m8
    - name: create-cluster
      inputs:
        parameters:
          - name: release-branch
          - name: tidb-url
          - name: tikv-url
          - name: pd-url
      activeDeadlineSeconds: 3600
      resource:
        action: create
        successCondition: status.state = ready
        manifest: |
          apiVersion: naglfar.pingcap.com/v1
          kind: TestClusterTopology
          metadata:
            name: tidb-cluster
            namespace: {{workflow.name}}
          spec:
            resourceRequest: tidb-cluster
            tidbCluster:
              tiupMirror: http://172.16.4.71:31888
              serverConfigs:
                tidb: |-
                tikv: |-
                  rocksdb.defaultcf.block-cache-size: "16GB"
                  rocksdb.writecf.block-cache-size: "9GB"
                  rocksdb.lockcf.block-cache-size: "1GB"
                pd: |-
              version:
                version: {{inputs.parameters.release-branch}}
                tidbDownloadURL: {{inputs.parameters.tidb-url}}
                tikvDownloadURL: {{inputs.parameters.tikv-url}}
                pdDownloadURL: {{inputs.parameters.pd-url}}
                patchPolicy: Replace
              control: tidb
              tikv:
                - host: tikv-1
                  port: 20160
                  statusPort: 20180
                  deployDir: /disk1/deploy/tikv-20160
                  dataDir: /disk1/data/tikv-20160
                  logDir: /disk1/deploy/tikv-20160/log
                - host: tikv-2
                  port: 20160
                  statusPort: 20180
                  deployDir: /disk1/deploy/tikv-20160
                  dataDir: /disk1/data/tikv-20160
                  logDir: /disk1/deploy/tikv-20160/log
                - host: tikv-3
                  port: 20160
                  statusPort: 20180
                  deployDir: /disk1/deploy/tikv-20160
                  dataDir: /disk1/data/tikv-20160
                  logDir: /disk1/deploy/tikv-20160/log
                - host: tikv-4
                  port: 20160
                  statusPort: 20180
                  deployDir: /disk1/deploy/tikv-20160
                  dataDir: /disk1/data/tikv-20160
                  logDir: /disk1/deploy/tikv-20160/log
                - host: tikv-5
                  port: 20160
                  statusPort: 20180
                  deployDir: /disk1/deploy/tikv-20160
                  dataDir: /disk1/data/tikv-20160
                  logDir: /disk1/deploy/tikv-20160/log        
              tidb:
                - host: tidb-1
                  deployDir: /disk1/deploy/tidb-4000
                - host: tidb-2
                  deployDir: /disk1/deploy/tidb-4000  
              pd:
                - host: pd
                  deployDir: /disk1/deploy/pd-2379
                  dataDir: /disk1/data/pd-2379
                  logDir: /disk1/deploy/pd-2379/log
              monitor:
                - host: tidb
                  deployDir: /disk1/deploy/prometheus-8249
                  dataDir: /disk1/deploy/prometheus-8249/data
              grafana:
                - host: tidb
                  deployDir: /disk1/deploy/grafana-3000
    - name: uninstall-cluster
      resource:
        action: delete
        manifest: |
          apiVersion: naglfar.pingcap.com/v1
          kind: TestClusterTopology
          metadata:
            name: tidb-cluster
            namespace: {{workflow.name}}
    - name: importing
      inputs:
        parameters:
          - name: toolset-tag
          - name: release-branch
      resource:
        action: create
        successCondition: status.state = succeeded
        failureCondition: status.state = failed
        manifest: |
          apiVersion: naglfar.pingcap.com/v1
          kind: TestWorkload
          metadata:
            name: sysbench-importing
            namespace: {{workflow.name}}
          spec:
            clusterTopologies:
              - name: tidb-cluster
                aliasName: cluster
            workloads:
              - name: sysbench-importing
                dockerContainer:
                  resourceRequest:
                    name: tidb-cluster
                    node: workload
                  image: "docker.io/pingcap/br:{{inputs.parameters.toolset-tag}}"
                  imagePullPolicy: IfNotPresent
                  command:
                    - /bin/bash
                    - -c
                    - |
                      #!/bin/bash
                      set -ex
                      tidb=`echo $cluster_tidb0 | awk -F ":" '{print $1}'`
                      pd=`echo $cluster_pd0 | awk -F ":" '{print $1}'`
                      release_branch="{{inputs.parameters.release-branch}}"

                      sysbench --config-file=config select_random_points --tables=1 \
                      --table-size=50000000 --rand-type=uniform --mysql-host=1tidb  \
                      --mysql-port=4000 --mysql-user=root  --mysql-db=location --report-interval=1 \
                      --events=0 --time=0 --threads=100 prepare

    - name: benching
      resource:
        action: create
        successCondition: status.state = succeeded
        failureCondition: status.state = failed
        manifest: |
          apiVersion: naglfar.pingcap.com/v1
          kind: TestWorkload
          metadata:
            name: sysbench-benching
            namespace: {{workflow.name}}
          spec:
            clusterTopologies:
              - name: tidb-cluster
                aliasName: cluster
            workloads:
              - name: sysbench-benching
                dockerContainer:
                  resourceRequest:
                    name: tidb-cluster
                    node: workload
                  image: "hub.pingcap.net/mahjonp/bench-toolset"
                  imagePullPolicy: IfNotPresent
                  command:
                    - /bin/sh
                    - -c
                    - |
                      set -ex
                      tidb=`echo $cluster_tidb0 | awk -F ":" '{print $1}'`

                      sysbench --config-file=config select_random_points 
                                    --tables=1 \
                                    --table-size=50000000 \
                                    --rand-type=uniform \
                                    --mysql-host=1tidb  \
                                    --mysql-port=4000  \
                                    --mysql-user=root  \
                                    --mysql-db=location \
                                    --report-interval=1 \
                                    --events=0           \
                                    --time=0             \
                                    --threads=100 run
    - name: workload-deletion
      inputs:
        parameters:
          - name: workload_name
      resource:
        action: delete
        manifest: |
          apiVersion: naglfar.pingcap.com/v1
          kind: TestWorkload
          metadata:
            name: {{inputs.parameters.workload_name}}
            namespace: {{workflow.name}}
    - name: create-ns
      resource:
        action: create
        successCondition: status.phase = Active
        manifest: |
          apiVersion: v1
          kind: Namespace
          metadata:
            name: {{workflow.name}}
    - name: delete-ns
      resource:
        action: delete
        manifest: |
          apiVersion: v1
          kind: Namespace
          metadata:
            name: {{workflow.name}}
